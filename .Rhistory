install.packages("catSurv")
#try x axis - 5 to 5
# y is o 1
library(catSurv)
#try x axis - 5 to 5
# y is o 1
library(catSurv)
# first plot probability given theta
data("ltm_cat")
attach(ltm_cat)
#Example of how to write this binary
ifr_plot(catObj=ltm_cat, item=1)
#Example of how to write this binary
ltmCat(ltm_cat)
ltmCat
#Example of how to write this binary
ltmCat(npi)
View(ltm_cat)
plot.new
plot.new()
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
plot(1, type="n", xlab="", ylab="", xlim=c(0, 10), ylim=c(0, 10))
plot(fit)
ltm_cat
library(ltm)
ltm
ltm_cat
??ltm_cat
??ltmCat
ltmCat
ltm
ltmCat()
ltmCat
catSurv
data(npi)
ltm_cat1 <- ltmCat(npi, quadraturePoints = 2)
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 100)) ## from ltm package
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 2)) ## from ltm package
ltm_fit
plot(ltm_fit)
plot(ltm_cat1)
class(ltm_fit)
class(ltm_cat1)
plot.ltm
setGeneric("plot", function(data, quadraturePoints = NULL, ...){
standardGeneric("plot")
})
#' @rdname gpcmCat
#' @export
setMethod("plot",
## Slots that have changed from default values
getModel(ltm_cat)
getDifficulty(ltm_cat)
ltm_cat1
## Creating Cat object with fitted object of class ltm
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 100)) ## from ltm package
## Creating Cat object with fitted object of class ltm
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 3)) ## from ltm package
class(ltm_fit)
class(ltm_cat1)
plot(ltm_fit)
#' @rdname gpcmCat
#' @export
setMethod("plot_ltm",
setGeneric("plot", function(data, quadraturePoints = NULL, ...){
standardGeneric("plot")
})
library(catSurv)
library(catSurv)
CatSurv
catSurv
library(catSurv)
catSurv
install.packages("catSurv")
install.packages("catSurv")
library(catSurv)
library(catSurv)
## Not run:
## Creating Cat object with raw data
data(npi)
attach(npi)
library(ltm)
ltm
ltm(npi)
?ltm
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 3))
ltm1 <- ltm(ltm_fit, quadraturePoints = 3)
plot(ltm1)
ltm1 <- ltm(ltm_fit)
ltm_fit
## Creating Cat object with fitted object of class ltm
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 3)) ## from ltm package
plot(ltm_fit)
plot(ltm_fit, "IFR")
plot(ltm_fit, "IIC")
ggplot(rirf(ltm_fit), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
library(ggplot2)
class(ltm_cat2)
ltm_cat1 <- ltmCat(npi, quadraturePoints = 3)
## Creating Cat object with fitted object of class ltm
ltm_fit <- ltm(npi ~ z1, control = list(GHk = 3)) ## from ltm package
ltm_cat2 <- ltmCat(ltm_fit)
class(ltm_cat1)
class(ltm_cat2)
class(ltm_fit)
ltm_fit
class(ltm_cat2)
ltm_cat2
ltm_fit
ggplot(rirf(ltm_fit), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
rirf
install.packages("epmr")
install.packages("devtools")
library(devtools)
install_github("talbano/epmr")
##looking at another irf function to understand what inputs to use
install.packages("devtools")
?rirf
??rirf
ggplot(rirf(ltm_fit), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
library(talbano/epmr)
library(epmr)
rirf
ggplot(rirf(ltm_fit), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ipar <- data.frame(a = c(2, 1, .5, 1, 1.5), b = c(3, 2, -.5, 0, -1),
ipar <- data.frame(a = c(2, 1, .5, 1, 1.5), b = c(3, 2, -.5, 0, -1),
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ipar <- data.frame(a = c(2, 1, .5, 1, 1.5), b = c(3, 2, -.5, 0, -1),  c = c(0, .2, .25, .1, .28)
ipar <- data.frame(a = c(2, 1, .5, 1, 1.5), b = c(3, 2, -.5, 0, -1),  c = c(0, .2, .25, .1, .28))
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ipar <- data.frame(a = c(2, 1, .5, 1, 1.5), b = c(3, 2, -.5, 0, -1),  c = c(0, .2, .25, .1, .28))
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ipar <- data.frame(a = c(2, 1, .5, 1, 1.5), b = c(3, 2, -.5, 0, -1),  c = c(0, .2, .25, .1, .28), row.names = paste0("item", 1:5))
ipar
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Pr(X)") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
#trying different data
data(SAT)
source('C:/Users/Dominique/OneDrive/Documents/Spring 2018/Applied Statistical Programming/project/trying.R', echo=TRUE)
data(SAT)
library(faraway)
car
install.packages("faraway")
install.packages("faraway")
library(faraway)
car
SAT
data(SAT)
data(sat)
test<-ltmCat(sat)
sat
source('C:/Users/Dominique/OneDrive/Documents/Spring 2018/Applied Statistical Programming/project/trying.R', echo=TRUE)
install.packages("irf")
install.packages("VAR")
install.packages("SVAR")
install.packages("vars")
library(vars)
data("Canada")
var.2c <- VAR(Canada, p = 2, type = "const")
var.2c
irf(var.2c, impulse = "e", response = c("prod", "rw", "U"), boot =
FALSE)
canteset<-irf(var.2c, impulse = "e", response = c("prod", "rw", "U"), boot =
FALSE)
ggplot(rirf(cantest), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
library(ggplot2)
ggplot(rirf(cantest), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
##looking at another irf function to understand what inputs to use
install.packages("devtools")
library(devtools)
install_github("talbano/epmr")
??rirf
library(epmr)
ggplot(rirf(cantest), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
ggplot(rirf(ipar), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
cantest<-irf(var.2c, impulse = "e", response = c("prod", "rw", "U"), boot =
FALSE)
cantest<-cbind(cantest, row.names = paste0("item", 1:5))
cantest
cantest<-irf(var.2c, impulse = "e", response = c("prod", "rw", "U"), boot =
FALSE)
cantest
cantest<-cbind(cantest, row.names = paste0("item", 1:11))
ggplot(rirf(cantest), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
cantest
cantest<-irf(var.2c, impulse = "e", response = c("prod", "rw", "U"), boot =
FALSE)
cantest
cantest<-as.data.frame(cantest)
cantest
a<-cantest$prod
a
cantest$prod
a<-cantest["prod"]
a
a<-cantest[,1]
cantest
cantest[1]
cantest$irf
cantest$irf$e
ggplot(rirf(cantest$irf$e), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
cantest<-cantest$irf$e
cantest<-cbind(cantest, row.names = paste0("item", 1:11))
ggplot(rirf(cantest), aes(theta)) + scale_y_continuous("Y|Theta") +
geom_line(aes(y = item1), col = 1) +
geom_line(aes(y = item2), col = 2) +
geom_line(aes(y = item3), col = 3) +
geom_line(aes(y = item4), col = 4) +
geom_line(aes(y = item5), col = 5)
var.2c
sociology
